// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Nivel {
  id          Int          @id @default(autoincrement())
  lecciones   Leccion[]
}

model Leccion {
  id            Int          @id @default(autoincrement())
  title         String
  desc          String
  imgUrl        String?  
  tipo          String    
  nivelId       Int?
  nivel         Nivel?       @relation(fields: [nivelId], references: [id], onDelete: Cascade)
  cards         Card[]    
  cuestionario  Cuestionario? @relation(fields: [cuestionarioId], references: [id])
  cuestionarioId Int?       @unique 
}

model Cuestionario {
  id            Int          @id @default(autoincrement())
  leccion       Leccion?     @relation
  preguntas     Pregunta[]    
}

model Pregunta {
  id             Int          @id @default(autoincrement())
  texto          String       
  cuestionarioId Int          
  cuestionario   Cuestionario @relation(fields: [cuestionarioId], references: [id], onDelete: Cascade)
  opciones       Opcion[]     
}

model Opcion {
  id             Int          @id @default(autoincrement())
  texto          String       
  esCorrecta     Boolean      
  preguntaId     Int          
  pregunta       Pregunta     @relation(fields: [preguntaId], references: [id], onDelete: Cascade)
}

model Card {
  id       Int       @id @default(autoincrement())
  title    String
  content  String
  imageUrl String?
  leccionId  Int
  leccion  Leccion @relation(fields: [leccionId], references: [id], onDelete: Cascade)
}



model User {
  id        Int      @id @default(autoincrement())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}
